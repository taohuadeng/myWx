<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0" metadata-complete="false">

    <!-- 启动服务器读取的配置文件 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring-config/*.xml</param-value>
    </context-param>

    <!-- SpringMVC的配置 -->
    <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:/spring-config/spring-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <!-- 拦截所有URL -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!-- 注册Spring的request作用域 -->
    <!--
        request request表示该针对每一次HTTP请求都会产生一个新的bean，同时该bean仅在当前HTTP
        request内有效，配置实例： request、session、global
        session使用的时候首先要在初始化web的web.xml中做如下配置： 如果你使用的是Servlet
        2.4及以上的web容器，那么你仅需要在web应用的XML声明文件web.xml中增加下述ContextListener即可：
    -->
    <listener>
        <listener-class>
            org.springframework.web.context.request.RequestContextListener
        </listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- UrlReWriterFilter -->
    <filter>
        <filter-name>UrlReWriterFilter</filter-name>
        <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
        <!--<init-param>
            <param-name>statusPath</param-name>
            <param-value>/test</param-value>
        </init-param>-->
    </filter>
    <filter-mapping>
        <!-- 这里的名字要对应上UrlReWriterFilter -->
        <filter-name>UrlReWriterFilter</filter-name>
        <!-- 这里是选择过滤掉全部的Url -->
        <url-pattern>/*</url-pattern>
        <!-- 主要说明该拦截器拦截的请求包括客户端的请求和从服务器端forward的请求 -->
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <!-- 防乱码过滤器 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


</web-app>
